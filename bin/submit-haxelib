#!/bin/bash
#
# Bag and tag a release to haxelib

set -e

if [ $# -lt 1 ]; then
    echo "Usage: $0 VERSION"
    exit 1
fi

VERSION=$1
ARCHIVE=/tmp/haxelib.zip

FLAMBE_ROOT=`readlink -f $(dirname $0)/..`
DEMOS_ROOT="$FLAMBE_ROOT/../flambe-demos"
cd $FLAMBE_ROOT

# Make sure the unit tests pass
cd tests
../bin/wafl configure build
cd ..

rm -f $ARCHIVE

git ls-files \
    bin/wafl bin/wafl.bat bin/waf \
    tools/embedder tools/waf \
    LICENSE.txt | zip $ARCHIVE -@

# Include the src directory's contents at the top-level to be nice to IDEs
cd src
git ls-files | zip $ARCHIVE -@
cd ..

# Process the haxelib.json template and add it to the zip
sed -e s/{{VERSION}}/$VERSION/ etc/haxelib.json > /tmp/haxelib.json
zip -j $ARCHIVE /tmp/haxelib.json

# Include our haxedoc.xml as well
bin/build-chxdoc
zip -j $ARCHIVE chxdoc/haxedoc.xml

# Include the FD plugin
tools/flashdevelop/build-fdz
zip -j $ARCHIVE tools/flashdevelop/flambe-FlashDevelop.fdz

# Now would be a good time to double-check everything works
haxelib local $ARCHIVE

read -p "Submit Flambe $VERSION to haxelib [Y/n]? " CONFIRM
case "$CONFIRM" in
    "Y" | "y" | "")
        $DEMOS_ROOT/bin/upload-all
        rsync -avz --delete chxdoc/ catdap:web/flambe/api/
        haxelib submit $ARCHIVE
        git tag flambe-$VERSION

        pushd $DEMOS_ROOT
        git tag flambe-$VERSION
        popd

        xdg-open "mailto:flambe@googlegroups.com?subject=Flambe $VERSION released"
        ;;
esac
