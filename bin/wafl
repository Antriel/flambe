#!/usr/bin/env python
#
# Locates a Flambe haxelib install and runs its bundled waf

import os, platform, sys
env = os.environ
join = os.path.join

try:
    # TODO(bruno): This may need to be changed in Haxe 3?
    if platform.system() == "Windows":
        lib = join(env["HAXEPATH"], "lib", "flambe")
    else:
        with open(join(env["HOME"], ".haxelib")) as f:
            lib = join(f.read(), "flambe")

    dev = join(lib, ".dev")
    current = join(lib, ".current")

    if os.path.isfile(dev):
        with open(dev) as f:
            flambe_root = join(f.read(), "..")
    else:
        with open(current) as f:
            flambe_root = join(lib, f.read().replace(".", ","))

except IOError:
    print("Could not locate Flambe, run `haxelib install flambe`.")
    sys.exit(1)

# We can't just use runpy because waf contains null bytes, so open and exec it manually, leaving out
# the binary section
waf = join(flambe_root, "bin", "waf")
with open(waf, "rb") as f:
    src = bytearray()
    terminator = "#==>\n".encode()
    for line in f:
        if line == terminator: break
        src += line

    # Let waf find our custom tools
    sys.path.insert(0, join(flambe_root, "tools", "waf"))
    sys.argv[0] = waf # Kinda silly

    exec(compile(src, waf, "exec"))
